# Create a namespace for the Airflow deployment
apiVersion: v1
kind: Namespace
metadata:
  name: airflow


---

# Create a PVC for the Airflow logs
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: airflow-pvc-logs
  namespace: airflow
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi


---

# Create a PVC for the Airflow dags
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: airflow-pvc-dags
  namespace: airflow
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi


---

# Create a PVC for the PostgreSQL database
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: airflow-pvc-postgres
  namespace: airflow
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi


---

# Create a Deployment for the PostgreSQL database
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-postgres
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-postgres
  template:
    metadata:
      labels:
        app: airflow-postgres        
    spec:
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: airflow-pvc-postgres          
      containers:
      - name: airflow-postgres
        image: postgres:9.6
        resources:
          requests:
            memory: "512Mi"
            cpu: "1"
          limits:
            memory: "2Gi"
            cpu: "2"
        env:
        # Set environment variables for PostgreSQL
        # These variables are for example purposes; in production, consider using secrets
        - name: POSTGRES_USER
          value: "airflow"
        - name: POSTGRES_PASSWORD
          value: "airflow"
        - name: POSTGRES_DB
          value: "airflow"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data


---

# Create a service for the PostgreSQL database
apiVersion: v1
kind: Service
metadata:
  name: airflow-postgres
  namespace: airflow
spec:
  selector:
    app: airflow-postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432


---

# Create a Deployment for the Airflow web server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-webserver
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-webserver
  template:
    metadata:
      labels:
        app: airflow-webserver        
    spec:
      restartPolicy: Always
      volumes:
      - name: airflow-logs
        persistentVolumeClaim:
          claimName: airflow-pvc-logs
      - name: airflow-dags
        persistentVolumeClaim:
          claimName: airflow-pvc-dags
      containers:
      - name: airflow-webserver
        image: puckel/docker-airflow:1.10.9
        resources:
          requests:
            memory: "512Mi"
            cpu: "1"
          limits:
            memory: "2Gi"
            cpu: "2"
        env:        
        - name: LOAD_EX
          value: "n"
        # These variables are for example purposes; in production, consider using secrets
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
          value: postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
        - name: AIRFLOW__CORE__EXECUTOR
          value: LocalExecutor
        volumeMounts:
        - name: airflow-logs
          mountPath: /usr/local/airflow/logs
        - name: airflow-dags
          mountPath: /usr/local/airflow/dags


---

# Create a service for the Airflow web server
apiVersion: v1
kind: Service
metadata:
  name: airflow-webserver
  namespace: airflow
spec:
  selector:
    app: airflow-webserver
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080